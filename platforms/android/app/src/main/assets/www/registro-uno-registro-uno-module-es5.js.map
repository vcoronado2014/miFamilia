{"version":3,"sources":["webpack:///src/app/registro-uno/registro-uno.page.html","webpack:///src/app/registro-uno/registro-uno.module.ts","webpack:///src/app/registro-uno/registro-uno.page.scss","webpack:///src/app/registro-uno/registro-uno.page.ts"],"names":["RegistroUnoPageModule","imports","forChild","path","component","declarations","RegistroUnoPage","navCtrl","utiles","servicioGeo","loading","formBuilder","activatedRoute","router","cargando","tipoMovimiento","estaAgregandoFamilia","RunValidator","fg","run","get","value","Rut","forma","controls","setErrors","runInvalido","queryParams","subscribe","params","nombre","cargarForma","required","validators","navigateRoot","idDispositivo","entregaIdDispositivo","create","message","duration","loader","present","then","isAppOnDevice","getRegistroAppRun","response","procesarRespuestaRegistro","getRegistroAppNativeRun","data","JSON","parse","error","presentToast","dismiss","registro","tieneCorreo","CorreoElectronico","undefined","tienePassword","Password","tieneRun","Run","tieneUsuario","NombreUsuario","abrirLogin","console","log","registroIncompleto","irARegistro","verficarEnrolamientoRayen","agregaFamilia","query","usuario","stringify","navigationExtras","runUsuario","fecha","format","enviar","state","encriptar","localStorage","setItem","verificaEnrolamiento","procesaRespuestaEnrolamiento","verificaEnrolamientoNative","usuarioAps","RespuestaBase","CodigoMensaje","UsuarioAps","Activo","Apellidos","ApellidoPaterno","ApellidoMaterno","Apodo","Avatar","Comuna","getItem","Eliminado","FechaBaja","FechaNacimiento","FechaRegistro","Id","IdDispositivo","Latitud","sessionStorage","Longitud","ModoRegistro","Nombres","Pais","Plataforma","Provincia","insertarGuion","TelefonoContacto","irAClaveUnica","selector","template"],"mappings":"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","file":"registro-uno-registro-uno-module-es5.js","sourcesContent":["export default \"<ion-content class=\\\"ion-padding\\\">\\n  <ion-row class=\\\"mt-24\\\">\\n    <button mat-icon-button aria-label=\\\"Example icon-button with a heart icon\\\" (click)=\\\"volver()\\\">\\n      <mat-icon>arrow_back_ios</mat-icon>\\n    </button>\\n  </ion-row>\\n  <ion-row class=\\\"mt-52\\\">\\n    <h1>Hola, {{nombre}}, un gusto en conocerte</h1> \\n  </ion-row>\\n  <ion-row>\\n    <p class=\\\"texto-1\\\">A continuación procederemos a verificar si ya tienes cuenta activa, para esto necesitamos que ingreses tu RUN.</p>\\n    \\n  </ion-row>\\n  <form [formGroup]=\\\"forma\\\" novalidate>\\n      <ion-row class=\\\"mt-32\\\">\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\n          <mat-label>Run (Sin puntos y con guión)</mat-label>\\n          <input matInput placeholder=\\\"12535301-1\\\" formControlName=\\\"run\\\" name=\\\"run\\\" required>\\n          <mat-error *ngIf=\\\"f.run.errors && f.run.errors.required\\\">Run requerido</mat-error>\\n          <mat-error *ngIf=\\\"f.run.errors && f.run.errors.runInvalido == false\\\">Rut inválido</mat-error>\\n        </mat-form-field>\\n      </ion-row>\\n      <ion-row class=\\\"mt-32\\\">\\n        <button [disabled]=\\\"forma.invalid\\\" mat-flat-button color=\\\"primary\\\" style=\\\"width: 90%; margin-left: 5%;\\\"\\n          (click)=\\\"verificaRegistro()\\\">CONTINUAR</button>\\n      </ion-row>\\n  </form>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RouterModule } from '@angular/router';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { RegistroUnoPage } from './registro-uno.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: RegistroUnoPage\n      }\n    ])\n  ],\n  declarations: [RegistroUnoPage]\n})\nexport class RegistroUnoPageModule {}","export default \".mt-32 {\\n  margin-top: 32px;\\n}\\n\\n.mt-24 {\\n  margin-top: 24px;\\n}\\n\\n.mt-80 {\\n  margin-top: 5em;\\n}\\n\\n.mt-40 {\\n  margin-top: 2.5em;\\n}\\n\\n.mt-36 {\\n  margin-top: 2.25em;\\n}\\n\\n.mt-52 {\\n  margin-top: 3.25em;\\n}\\n\\n.texto-1 {\\n  font-size: 1.3em;\\n  color: #575657;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0cm8tdW5vL0Y6XFxhcHBfbWlmYW1pbGlhX2dpdFxcbWlGYW1pbGlhX3ByZS9zcmNcXGFwcFxccmVnaXN0cm8tdW5vXFxyZWdpc3Ryby11bm8ucGFnZS5zY3NzIiwic3JjL2FwcC9yZWdpc3Ryby11bm8vcmVnaXN0cm8tdW5vLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0FDQ0o7O0FEQ0E7RUFDSSxnQkFBQTtBQ0VKOztBREFBO0VBQ0ksZUFBQTtBQ0dKOztBRERBO0VBQ0ksaUJBQUE7QUNJSjs7QURGQTtFQUNJLGtCQUFBO0FDS0o7O0FESEE7RUFDSSxrQkFBQTtBQ01KOztBREpBO0VBQ0ksZ0JBQUE7RUFDQSxjQUFBO0FDT0oiLCJmaWxlIjoic3JjL2FwcC9yZWdpc3Ryby11bm8vcmVnaXN0cm8tdW5vLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tdC0zMntcclxuICAgIG1hcmdpbi10b3A6IDMycHg7XHJcbn1cclxuLm10LTI0e1xyXG4gICAgbWFyZ2luLXRvcDogMjRweDtcclxufVxyXG4ubXQtODB7XHJcbiAgICBtYXJnaW4tdG9wOiA1ZW07XHJcbn1cclxuLm10LTQwe1xyXG4gICAgbWFyZ2luLXRvcDogMi41ZW07XHJcbn1cclxuLm10LTM2e1xyXG4gICAgbWFyZ2luLXRvcDogMi4yNWVtO1xyXG59XHJcbi5tdC01MntcclxuICAgIG1hcmdpbi10b3A6IDMuMjVlbTtcclxufVxyXG4udGV4dG8tMXtcclxuICAgIGZvbnQtc2l6ZTogMS4zZW07XHJcbiAgICBjb2xvcjogIzU3NTY1NztcclxuICAgIFxyXG59IiwiLm10LTMyIHtcbiAgbWFyZ2luLXRvcDogMzJweDtcbn1cblxuLm10LTI0IHtcbiAgbWFyZ2luLXRvcDogMjRweDtcbn1cblxuLm10LTgwIHtcbiAgbWFyZ2luLXRvcDogNWVtO1xufVxuXG4ubXQtNDAge1xuICBtYXJnaW4tdG9wOiAyLjVlbTtcbn1cblxuLm10LTM2IHtcbiAgbWFyZ2luLXRvcDogMi4yNWVtO1xufVxuXG4ubXQtNTIge1xuICBtYXJnaW4tdG9wOiAzLjI1ZW07XG59XG5cbi50ZXh0by0xIHtcbiAgZm9udC1zaXplOiAxLjNlbTtcbiAgY29sb3I6ICM1NzU2NTc7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { NavController, LoadingController } from '@ionic/angular';\nimport { FormGroup, Validators, FormBuilder, FormControl, ValidatorFn } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n//servicios\nimport { ServicioUtiles } from '../../app/services/ServicioUtiles';\nimport { ServicioGeo } from '../../app/services/ServicioGeo';\nimport { NavigationExtras } from '@angular/router';\n\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-registro-uno',\n  templateUrl: './registro-uno.page.html',\n  styleUrls: ['./registro-uno.page.scss'],\n})\nexport class RegistroUnoPage implements OnInit {\n  rut;\n  nombre;\n  cargando = false;\n  registroIncompleto: any;\n  //formulario\n  forma: FormGroup;\n  //rut = new FormControl('', [Validators.required, this.runValidator]);\n  //por defecto dejamos el tipo movimiento en 1 solicitud de login\n  //despues lo podemos recibir como parametro para cambiarlo\n  tipoMovimiento = '1';\n  estaAgregandoFamilia = false;\n  constructor(\n    private navCtrl: NavController,\n    public utiles: ServicioUtiles,\n    public servicioGeo: ServicioGeo,\n    public loading: LoadingController,\n    private formBuilder: FormBuilder,\n    public activatedRoute: ActivatedRoute,\n    private router: Router,\n  ) { \n\n  }\n\n  ngOnInit() {\n    moment.locale('es');\n    this.activatedRoute.queryParams.subscribe(params => {\n      if (params && params.estaAgregandoFamilia) {\n        this.estaAgregandoFamilia = true;\n      }\n      if (params && params.nombre){\n        this.nombre = params.nombre;\n      }\n    });\n    this.cargarForma();\n  }\n  cargarForma(){\n    this.forma = new FormGroup({\n      'run': new FormControl('', [Validators.required])      \n    },{ validators: this.RunValidator });\n  }\n\n  volver(){\n    //this.navCtrl.navigateRoot('nuevo-login');\n    this.navCtrl.navigateRoot('pre-registro-uno');\n  }\n  //para validar\n  get f() { return this.forma.controls; }\n  async verificaRegistro(){\n    let run = this.forma.controls.run;\n    let idDispositivo = this.utiles.entregaIdDispositivo();\n\n    this.cargando = true;\n    let loader = await this.loading.create({\n      message: 'Verificando...<br>Registro',\n      duration: 3000\n    });\n\n    //primero validamos nuevamente si cuenta con registro dentro de la app por run\n    await loader.present().then(async () => {\n      if (!this.utiles.isAppOnDevice()) {\n        //llamada web\n        this.servicioGeo.getRegistroAppRun(run.value, idDispositivo).subscribe((response:any)=>{\n          //procesar\n          //this.procesarInfo(response, loader);\n          this.procesarRespuestaRegistro(response, loader);\n        })\n      }\n      else{\n        //llamada nativa\n        this.servicioGeo.getRegistroAppNativeRun(run.value, idDispositivo).then((response:any)=>{\n          var data = JSON.parse(response.data);\n          this.procesarRespuestaRegistro(data, loader);\n        },\n        (error)=>{\n          this.utiles.presentToast('Ocurrió un error de obtención identificador', 'bottom', 4000);\n          loader.dismiss();\n        }\n        );\n      }\n    });\n\n  }\n  abrirLogin(){\n    this.navCtrl.navigateRoot('nuevo-login');\n  }\n  procesarRespuestaRegistro(registro, loader){\n    if (registro && registro != null){\n      //verificamos si tiene su registro completo\n      var tieneCorreo = !(registro.CorreoElectronico == null || registro.CorreoElectronico == \"\" || registro.CorreoElectronico == undefined);\n      var tienePassword = !(registro.Password == null || registro.Password == \"\" || registro.Password == undefined);\n      var tieneRun = !(registro.Run == null || registro.Run == \"\" || registro.Run == undefined);\n      var tieneUsuario = !(registro.NombreUsuario == null || registro.NombreUsuario == \"\" || registro.NombreUsuario == undefined);\n      if (tieneCorreo && tienePassword && tieneRun && tieneUsuario){\n        //tiene registro completo, enviarlo a la pagina de login\n        this.utiles.presentToast('Usted ya tiene registro', 'middle', 5000);\n        loader.dismiss();\n        if (this.estaAgregandoFamilia == false){\n          this.abrirLogin();\n        }\n        else{\n          //si esta agregando familia hay que crear lo que corresponde y avisar al\n          //usuario que fue creado o no exito\n          console.log('ESTA AGREGANDO FAMILIA');\n        }\n        \n      }\n      else{\n        //su registro esta incompleto, derivarlo a la pagina de registro de la app\n        this.registroIncompleto = registro;\n        //pasar como parametro el registro incompleto a la otra pantalla para que pueda completarlo\n        //******* LLAMAR A LA PAGINA DE REGISTRO  *************/\n        this.utiles.presentToast('Su registro está incompleto', 'middle', 5000);\n        loader.dismiss();\n        this.irARegistro(this.estaAgregandoFamilia);\n      }\n    }\n    else{\n      //no tiene registro, llamar a la api para buscarlo en rayen\n      loader.dismiss();\n      //llamamos a enrolamiento\n      this.verficarEnrolamientoRayen();\n      //console.log('Buscarlo en rayen');\n\n    }\n  }\n  irARegistro(agregaFamilia){\n    //enviar registroIncompleto\n    if (this.registroIncompleto){\n      let query = {\n        usuario: null,\n        estaAgregandoFamilia: null\n      };\n      query = { usuario: JSON.stringify(this.registroIncompleto), estaAgregandoFamilia : agregaFamilia }\n      const navigationExtras: NavigationExtras = {\n        queryParams: query\n      }; \n      this.navCtrl.navigateRoot(['registro-usuario'], navigationExtras);\n    }\n\n  }\n  irAClaveUnica(){\n    //debemos generar un hash de al menos 30 caracteres para enviar a clave unica (state)\n    let runUsuario = this.forma.controls.run.value;\n    let fecha = moment().format('DD-MM-YYYY HH:mm');\n    let enviar = runUsuario +'|'+fecha + '|' + this.tipoMovimiento;\n    let state = this.utiles.encriptar(enviar);\n    //guardamos en el local storage el state\n    localStorage.setItem(\"STATE_CLAVE_UNICA\", state);\n    const navigationExtras: NavigationExtras = {\n      queryParams: {\n        state: state\n      }\n    };\n    //this.navCtrl.navigateRoot('login-clave-unica');\n    this.navCtrl.navigateRoot(['login-clave-unica'], navigationExtras);\n  }\n\n  async verficarEnrolamientoRayen(){\n    let run = this.forma.controls.run;\n\n    this.cargando = true;\n    let loader = await this.loading.create({\n      message: 'Verificando...<br>Registro',\n      duration: 3000\n    });\n\n    await loader.present().then(async () => {\n      if (!this.utiles.isAppOnDevice()) {\n        //llamada web\n        this.servicioGeo.verificaEnrolamiento(run.value).subscribe((response:any)=>{\n          //procesar\n          console.log(response);\n          this.procesaRespuestaEnrolamiento(response, loader);\n        })\n      }\n      else{\n        //llamada nativa\n        this.servicioGeo.verificaEnrolamientoNative(run.value).then((response:any)=>{\n          var data = JSON.parse(response.data);\n          console.log(data);\n          this.procesaRespuestaEnrolamiento(data, loader);\n        },\n        (error)=>{\n          this.utiles.presentToast('Ocurrió un error de obtención identificador', 'bottom', 4000);\n          loader.dismiss();\n        }\n        );\n      }\n    })\n\n  }\n  procesaRespuestaEnrolamiento(usuarioAps, loader){\n    if (usuarioAps.RespuestaBase.CodigoMensaje == 0){\n      let usuario = usuarioAps.UsuarioAps;\n      this.registroIncompleto = {\n        Activo: 1,\n        Apellidos: usuario.ApellidoPaterno == null ? '' : usuario.ApellidoPaterno + ' ' + usuario.ApellidoMaterno == null ? '': usuario.ApellidoMaterno,\n        Apodo: \"\",\n        Avatar: \"\",\n        Comuna: localStorage.getItem(\"comuna\"),\n        CorreoElectronico: \"\",\n        Eliminado: 0,\n        FechaBaja: \"0001-01-01T00:00:00\",\n        FechaNacimiento: \"0001-01-01T00:00:00\",\n        FechaRegistro: \"0001-01-01T00:00:00\",\n        Id: 0,\n        IdDispositivo: localStorage.getItem(\"token_dispositivo\"),\n        Latitud: sessionStorage.getItem(\"latitud\"),\n        Longitud: sessionStorage.getItem(\"longitud\"),\n        //registro mediante el enrolamiento\n        ModoRegistro: 2,\n        NombreUsuario: \"\",\n        Nombres: usuario.Nombres,\n        Pais: localStorage.getItem(\"pais\"),\n        Password: \"\",\n        Plataforma: localStorage.getItem(\"plataforma\"),\n        Provincia: localStorage.getItem(\"provincia\"),\n        Run: this.utiles.insertarGuion(usuario.Rut),\n        TelefonoContacto: ''\n      }\n      loader.dismiss();\n      //acá estamos ok deberíamos mandarlo a que complete su fomrulario\n      this.irARegistro(this.estaAgregandoFamilia);\n    }\n    else {\n      //aca definitivamente debemos enviarlo a clave única\n      loader.dismiss();\n      console.log('clave unica');\n      this.irAClaveUnica();\n    }\n  }\n\n\n  RunValidator: ValidatorFn = (fg: FormGroup) => {\n    const run = fg.get('run').value;\n    if (run !== null && run !== \"\") {\n      if (this.utiles.Rut(run) == false) {\n        this.forma.controls.run.setErrors({ runInvalido: false });\n      }\n    }\n\n    return run !== null ? null : null;\n  };\n\n}"]}