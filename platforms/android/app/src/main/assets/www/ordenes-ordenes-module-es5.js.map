{"version":3,"sources":["webpack:///src/app/ordenes/ordenes.page.html","webpack:///src/app/ordenes/ordenes.module.ts","webpack:///src/app/ordenes/ordenes.page.scss","webpack:///src/app/ordenes/ordenes.page.ts"],"names":["OrdenesPageModule","imports","forChild","path","component","declarations","OrdenesPage","navCtrl","toast","modalCtrl","platform","menu","activatedRoute","router","utiles","loading","lab","acceso","parametrosApp","miColor","textColor","tiene","estaCargando","loadInicio","listadoOrdenes","sessionStorage","UsuarioAps","usuarioAps","JSON","parse","entregaColor","create","cssClass","showBackdrop","spinner","loader","present","then","isAppOnDevice","getOrdenes","Id","subscribe","response","porocesarLista","getOrdenesNative","data","listado","s","fecha","FechaRegistro","format","Fecha","length","console","log","dismiss","item","componentProps","stringify","modal","logout","navigateRoot","read","selector","template"],"mappings":"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","file":"ordenes-ordenes-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\" mode=\\\"md\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/home\\\" class=\\\"fcw\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title class=\\\"fcw\\\">Ordenes</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"back-app\\\">\\r\\n<!--SI HAY ORDENES -->\\r\\n<app-progress [mostrar]=\\\"estaCargando\\\" titulo=\\\"Cargando exámenes\\\"></app-progress>\\r\\n\\r\\n<ion-card [hidden]=\\\"estaCargando\\\" *ngFor=\\\"let item of listadoOrdenes\\\" (click)=\\\"ordenSelected(item)\\\">\\r\\n  <ion-card-content>\\r\\n    <ion-item lines=\\\"none\\\" #myList>\\r\\n      <ion-avatar slot=\\\"start\\\">\\r\\n        <text-avatar [text]=\\\"item.NombreUsuario\\\" [color]=\\\"item.Color\\\" [textColor]=\\\"textColor\\\"></text-avatar>\\r\\n      </ion-avatar>\\r\\n      <ion-label class=\\\"ion-text-wrap\\\">{{ item.NombreUsuario }}</ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item lines=\\\"none\\\">\\r\\n      <ion-grid>\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">N° de órden: <strong>{{ item.Id }}</strong></ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col>\\r\\n            <ion-label class=\\\"ion-text-wrap\\\">Estado: <strong>{{ item.Estado }}</strong></ion-label>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </ion-item>\\r\\n    <ion-item lines=\\\"none\\\">\\r\\n      <ion-badge color=\\\"primary\\\" slot=\\\"end\\\">{{ item.Fecha }}</ion-badge>\\r\\n      <!-- <ion-icon name=\\\"time\\\" slot=\\\"end\\\"></ion-icon> -->\\r\\n    </ion-item>\\r\\n  </ion-card-content>\\r\\n</ion-card>  \\r\\n<!-- NO HAY ORDENES -->\\r\\n<div [hidden]=\\\"estaCargando\\\" *ngIf=\\\"tiene == false\\\" style=\\\"position: relative; height: 100vh;\\\">\\r\\n  <div style=\\\"position: absolute; display: table; height: 100%; font-size: 20px; color:#BDBDBD; text-align: center;width: 100%;\\\">\\r\\n    <p style=\\\"display: table-cell; vertical-align: middle\\\">No hay órdenes para mostrar  <br>\\r\\n    <ion-icon name=\\\"information-circle\\\" style=\\\"font-size: 50px;\\\"></ion-icon></p>\\r\\n  </div>\\r\\n</div>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { OrdenesPage } from './ordenes.page';\r\nimport { TextAvatarModule } from '../../directives/text-avatar/index'\r\nimport { ComponentsModule } from '../components/components.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TextAvatarModule,\r\n    ComponentsModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: OrdenesPage\r\n      }\r\n    ])\r\n  ],\r\n  declarations: [OrdenesPage]\r\n})\r\nexport class OrdenesPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVuZXMvb3JkZW5lcy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NavController, ToastController, Platform, ModalController, LoadingController, MenuController, IonItem } from '@ionic/angular';\r\n//parametros\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n//SERVICIOS\r\nimport { ServicioUtiles } from '../../app/services/ServicioUtiles';\r\nimport { ServicioLaboratorio } from '../../app/services/ServicioLaboratorio';\r\nimport { ServicioAcceso } from '../../app/services/ServicioAcceso';\r\nimport { ServicioParametrosApp } from '../../app/services/ServicioParametrosApp';\r\n//modal\r\nimport { ModalExamenesPage } from '../modal-examenes/modal-examenes.page';\r\n//moment\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-ordenes',\r\n  templateUrl: './ordenes.page.html',\r\n  styleUrls: ['./ordenes.page.scss'],\r\n})\r\nexport class OrdenesPage implements OnInit {\r\n  @ViewChild('myList', {read: IonItem}) list: IonItem;\r\n  miColor = '#FF4081';\r\n  textColor = '#FFFFFF';\r\n  //tiene registros\r\n  tiene = true;\r\n  public listadoOrdenes;\r\n  public usuarioAps;\r\n  estaCargando = false;\r\n  constructor(\r\n    public navCtrl: NavController,\r\n    public toast: ToastController,\r\n    public modalCtrl: ModalController,\r\n    public platform: Platform,\r\n    public menu:MenuController,\r\n    public activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    public utiles: ServicioUtiles,\r\n    public loading: LoadingController,\r\n    private lab: ServicioLaboratorio,\r\n    public acceso: ServicioAcceso,\r\n    public parametrosApp: ServicioParametrosApp\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    moment.locale('es');\r\n/*     if (sessionStorage.getItem(\"RSS_ID\")){\r\n      if (this.parametrosApp.USA_LOG_MODULOS()){\r\n        this.utiles.registrarMovimiento(sessionStorage.getItem(\"RSS_ID\"), 'EXAMENES');\r\n      }\r\n    } */\r\n    this.loadInicio();\r\n  }\r\n  async loadInicio(){\r\n    //mi color\r\n    //this.miColor = this.utiles.entregaMiColor();\r\n    //ordenes\r\n    this.listadoOrdenes = [];           \r\n    //contenido de las llamadas.\r\n    if (sessionStorage.UsuarioAps) {\r\n      //debemos enviar el uspId del titular para que traiga todos los datos\r\n      this.usuarioAps = JSON.parse(sessionStorage.UsuarioAps);\r\n    }\r\n    if (this.usuarioAps){\r\n      this.miColor = this.utiles.entregaColor(this.usuarioAps);\r\n      //original\r\n/*       let loader = await this.loading.create({\r\n        message: 'Obteniendo...<br>Órdenes del usuario',\r\n        duration: 20000\r\n      }); */\r\n      this.estaCargando = true;\r\n      let loader = await this.loading.create({\r\n        cssClass: 'loading-vacio',\r\n        showBackdrop: false,\r\n        spinner:null,\r\n      });\r\n\r\n      await loader.present().then(async () => {\r\n        if (!this.utiles.isAppOnDevice()) {\r\n          //llamada web\r\n          this.lab.getOrdenes(this.usuarioAps.Id).subscribe((response: any)=>{\r\n            this.porocesarLista(response, loader);\r\n          });\r\n        }\r\n        else {\r\n          //llamada nativa\r\n          this.lab.getOrdenesNative(this.usuarioAps.Id).then((response: any)=>{\r\n            this.porocesarLista(JSON.parse(response.data), loader);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n  porocesarLista(data, loader) {\r\n    var listado = data;\r\n    if (listado) {\r\n      for (var s in listado) {\r\n        let fecha = moment(listado[s].FechaRegistro).format('DD-MM-YYYY');\r\n        listado[s].Fecha = fecha;\r\n      }\r\n      //ahora asignamos la variable\r\n      this.listadoOrdenes = listado;\r\n      if (this.listadoOrdenes.length == 0) {\r\n        this.tiene = false;\r\n      }\r\n      console.log(this.listadoOrdenes);\r\n    }\r\n    loader.dismiss();\r\n    this.estaCargando = false;\r\n  }\r\n\r\n  async ordenSelected(item){\r\n    const modal = await this.modalCtrl.create(\r\n      {\r\n        component: ModalExamenesPage,\r\n        componentProps: {\r\n          'orden': JSON.stringify(item)\r\n        }\r\n      }\r\n    );\r\n    return await modal.present();\r\n  }\r\n  logout(){\r\n    this.acceso.logout();\r\n    this.navCtrl.navigateRoot('login');\r\n  }\r\n\r\n}\r\n"]}