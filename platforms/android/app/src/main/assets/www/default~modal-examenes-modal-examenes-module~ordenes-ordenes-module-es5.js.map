{"version":3,"sources":["webpack:///src/app/modal-examenes/modal-examenes.page.html","webpack:///src/app/modal-examenes/modal-examenes.page.scss","webpack:///src/app/modal-examenes/modal-examenes.page.ts"],"names":["ModalExamenesPage","modalCtrl","navParams","utiles","navCtrl","toast","platform","menu","loading","lab","miColor","textColor","tiene","estaCargando","tituloProgress","orden","JSON","parse","get","user","sessionStorage","UsuarioAps","userColor","Color","entregaColor","oalaId","Id","fechaOrden","Fecha","loadInicio","dismiss","listadoExamenes","usuarioAps","create","cssClass","showBackdrop","spinner","loader","present","then","isAppOnDevice","getExamenes","subscribe","response","porocesarLista","error","console","log","message","getExamenesNative","data","listado","s","fecha","FechaRegistro","format","length","read","selector","template"],"mappings":"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","file":"default~modal-examenes-modal-examenes-module~ordenes-ordenes-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title class=\\\"home\\\">Exámenes</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\" class=\\\"pdr10\\\" (click)=\\\"dismiss()\\\">\\r\\n      <ion-icon class=\\\"home\\\" slot=\\\"icon-only\\\" name=\\\"close\\\"></ion-icon>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"back-app\\\">\\r\\n  <app-progress [mostrar]=\\\"estaCargando\\\" [titulo]=\\\"tituloProgress\\\"></app-progress>\\r\\n  <!-- HAY EXAMENES -->\\r\\n  <ion-list [hidden]=\\\"estaCargando\\\" *ngIf=\\\"tiene\\\">\\r\\n    \\r\\n      <app-avatar [lines]=\\\"none\\\" [urlImagen] = \\\"orden.UrlImagen\\\" \\r\\n      [nombreCompleto]=\\\"orden.NombreUsuario\\\" \\r\\n      [parentezco]=\\\"orden.Parentezco\\\"></app-avatar>\\r\\n    <ion-list-header lines=\\\"inset\\\" mode=\\\"md\\\">\\r\\n      <ion-label><strong>Nº Órden: {{oalaId}}</strong></ion-label>\\r\\n      <ion-badge color=\\\"secondary\\\" class=\\\"ion-margin-end\\\">{{ fechaOrden }}</ion-badge>\\r\\n      <!-- <ion-button>Clear</ion-button> -->\\r\\n    </ion-list-header>\\r\\n    <ion-item lines=\\\"none\\\" *ngFor=\\\"let item of listadoExamenes\\\">\\r\\n      <ion-grid>\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"8\\\">\\r\\n            <h5>{{item.NombreExamen}}</h5>\\r\\n            <p *ngIf=\\\"item.VisibleIcono\\\">\\r\\n              <ion-icon name=\\\"checkmark-circle\\\" *ngIf=\\\"item.Check\\\"></ion-icon>\\r\\n              <ion-icon name=\\\"remove-circle\\\" *ngIf=\\\"item.UnCheck\\\"></ion-icon>&nbsp;{{item.TextoResultados}}\\r\\n            </p>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"4\\\">\\r\\n            <ion-badge color=\\\"primary\\\">{{ item.Estado }}</ion-badge>\\r\\n            <h6 *ngIf=\\\"!item.VisibleTabla\\\" style=\\\"color: #666; font-size:0.7em;\\\"><ion-icon name=\\\"analitycs\\\"></ion-icon>&nbsp;Sin Resultados</h6> \\r\\n            <h6 *ngIf=\\\"item.VisibleTabla\\\" style=\\\"color: #666; font-size:0.7em;\\\"><ion-icon name=\\\"time\\\"></ion-icon>&nbsp;{{item.FechaMuestraStr}}</h6> \\r\\n          </ion-col>\\r\\n          <!-- RESULTADOS -->\\r\\n          <!-- aca debemos agregar otra lista quitar visible -->\\r\\n          <ion-list *ngIf=\\\"item.VisibleTabla\\\" style=\\\"width: 100%;\\\">\\r\\n            <ion-grid>\\r\\n              <ion-row class=\\\"titulo-tabla-examen\\\" [ngStyle]=\\\"{'background-color': userColor}\\\">\\r\\n                <ion-col size=\\\"6\\\" class=\\\"ion-text-wrap ion-text-center\\\">\\r\\n                  Nombre\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\r\\n                  Valor\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\r\\n                  U/M\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\r\\n                  Ref.\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n            </ion-grid>\\r\\n\\r\\n            <ion-row  *ngFor=\\\"let exa of item.Resultados\\\">\\r\\n              <ion-grid>\\r\\n                <ion-row style=\\\"font-size: 0.8em;font-style: italic;\\\">\\r\\n                  <ion-col size=\\\"6\\\" class=\\\"ion-text-wrap\\\">\\r\\n                    {{exa.DescripcionResultado}}\\r\\n                  </ion-col>\\r\\n                  <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\r\\n                    {{exa.Resultado}}\\r\\n                  </ion-col>\\r\\n                  <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\r\\n                    {{exa.Um}}\\r\\n                  </ion-col>\\r\\n                  <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\r\\n                    {{exa.ValoresReferencia}}\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n              </ion-grid>\\r\\n            </ion-row>\\r\\n          </ion-list>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n  <!-- NO HAY EXAMENES -->\\r\\n  <div [hidden]=\\\"estaCargando\\\" *ngIf=\\\"tiene == false\\\" style=\\\"position: relative; height: 100vh;\\\">\\r\\n    <div style=\\\"position: absolute; display: table; height: 100%; font-size: 30px; color:#BDBDBD; text-align: center;\\\">\\r\\n      <p style=\\\"display: table-cell; vertical-align: middle\\\">No hay exámenes para mostrar  <br>\\r\\n      <ion-icon name=\\\"information-circle\\\" style=\\\"font-size: 50px;\\\"></ion-icon></p>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \".titulo-tabla-examen {\\n  border-bottom-color: #dedede;\\n  border-bottom-style: solid;\\n  border-bottom-width: 1px;\\n  color: #fff;\\n  font-size: 0.8em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kYWwtZXhhbWVuZXMvRjpcXGFwcF9taWZhbWlsaWFfZ2l0XFxtaUZhbWlsaWFfcHJlL3NyY1xcYXBwXFxtb2RhbC1leGFtZW5lc1xcbW9kYWwtZXhhbWVuZXMucGFnZS5zY3NzIiwic3JjL2FwcC9tb2RhbC1leGFtZW5lcy9tb2RhbC1leGFtZW5lcy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSw0QkFBQTtFQUNBLDBCQUFBO0VBQ0Esd0JBQUE7RUFFQSxXQUFBO0VBQ0EsZ0JBQUE7QUNBSiIsImZpbGUiOiJzcmMvYXBwL21vZGFsLWV4YW1lbmVzL21vZGFsLWV4YW1lbmVzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50aXR1bG8tdGFibGEtZXhhbWVue1xyXG4gICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI2RlZGVkZTtcclxuICAgIGJvcmRlci1ib3R0b20tc3R5bGU6IHNvbGlkO1xyXG4gICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4O1xyXG4gICAgLy9iYWNrZ3JvdW5kLWNvbG9yOiAjMDA5N0E3O1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBmb250LXNpemU6IDAuOGVtO1xyXG5cclxufSIsIi50aXR1bG8tdGFibGEtZXhhbWVuIHtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI2RlZGVkZTtcbiAgYm9yZGVyLWJvdHRvbS1zdHlsZTogc29saWQ7XG4gIGJvcmRlci1ib3R0b20td2lkdGg6IDFweDtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtc2l6ZTogMC44ZW07XG59Il19 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ModalController, NavParams, NavController, ToastController, Platform, LoadingController, MenuController, IonList } from '@ionic/angular';\r\n//SERVICIOS\r\nimport { ServicioUtiles } from '../../app/services/ServicioUtiles';\r\nimport { ServicioLaboratorio } from '../../app/services/ServicioLaboratorio';\r\nimport { environment } from 'src/environments/environment';\r\n//moment\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-modal-examenes',\r\n  templateUrl: './modal-examenes.page.html',\r\n  styleUrls: ['./modal-examenes.page.scss'],\r\n})\r\nexport class ModalExamenesPage implements OnInit {\r\n  //color\r\n  miColor = '#FF4081';\r\n  //textColor Directive\r\n  textColor = '#FFFFFF';\r\n  orden: any;\r\n  //tiene registros\r\n  tiene = true;\r\n  public listadoExamenes;\r\n  public oalaId;\r\n  public nombreUsuario;\r\n  public usuarioAps;\r\n  public user;\r\n  public userColor;\r\n  fechaOrden;\r\n  //loading\r\n  estaCargando = false;\r\n  tituloProgress = '';\r\n  @ViewChild('myList', { read: IonList }) list: IonList;\r\n  constructor(\r\n    public modalCtrl: ModalController,\r\n    public navParams: NavParams,\r\n    public utiles: ServicioUtiles,\r\n    public navCtrl: NavController,\r\n    public toast: ToastController,\r\n    public platform: Platform,\r\n    public menu: MenuController,\r\n    public loading: LoadingController,\r\n    private lab: ServicioLaboratorio,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    moment.locale('es');\r\n    //this.miColor = this.utiles.entregaMiColor();\r\n    this.orden = JSON.parse(this.navParams.get('orden'));\r\n    //console.log(this.orden);\r\n    //this.nombreUsuario = navParams.get('NombreUsuario');\r\n    this.user = JSON.parse(sessionStorage.UsuarioAps);\r\n    this.userColor = this.user.Color;\r\n    this.miColor = this.utiles.entregaColor(this.user);\r\n    if (this.orden) {\r\n      //existe la orden hacer las llamadas\r\n      this.oalaId = this.orden.Id;\r\n      this.fechaOrden = this.orden.Fecha;\r\n      this.loadInicio();\r\n    }\r\n  }\r\n  dismiss() {\r\n    this.modalCtrl.dismiss();\r\n  }\r\n  async loadInicio() {\r\n    //ordenes\r\n    this.listadoExamenes = [];\r\n    //contenido de las llamadas.\r\n    if (sessionStorage.UsuarioAps) {\r\n      //debemos enviar el uspId del titular para que traiga todos los datos\r\n      this.usuarioAps = JSON.parse(sessionStorage.UsuarioAps);\r\n    }\r\n    if (this.usuarioAps) {\r\n      this.estaCargando = true;\r\n      this.tituloProgress = 'Buscando exámenes del usuario';\r\n/*       let loader = await this.loading.create({\r\n        message: 'Obteniendo...<br>Exámenes del usuario',\r\n        duration: 20000\r\n      }); */\r\n\r\n      let loader = await this.loading.create({\r\n        cssClass: 'loading-vacio',\r\n        showBackdrop: false,\r\n        spinner: null,\r\n      });\r\n\r\n      await loader.present().then(async () => {\r\n        if (!this.utiles.isAppOnDevice()) {\r\n          //llamada web\r\n          this.lab.getExamenes(this.oalaId).subscribe((response: any) => {\r\n            this.porocesarLista(response, loader);\r\n          }, error => {\r\n            console.log(error.message);\r\n            this.estaCargando = false;\r\n            this.tituloProgress = '';\r\n            loader.dismiss();\r\n\r\n          });\r\n        }\r\n        else {\r\n          //llamada nativa\r\n          this.lab.getExamenesNative(this.oalaId).then((response: any) => {\r\n            this.porocesarLista(JSON.parse(response.data), loader);\r\n          }).catch(error=>{\r\n            console.log(error.message);\r\n            this.estaCargando = false;\r\n            this.tituloProgress = '';\r\n            loader.dismiss();\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n  porocesarLista(data, loader) {\r\n    var listado = data;\r\n    if (listado) {\r\n      for (var s in listado) {\r\n        let fecha = moment(listado[s].FechaRegistro).format('DD-MM-YYYY');\r\n        listado[s].Fecha = fecha;\r\n      }\r\n      //ahora asignamos la variable\r\n      this.listadoExamenes = listado;\r\n      if (this.listadoExamenes.length == 0) {\r\n        this.tiene = false;\r\n      }\r\n      //console.log(this.listadoExamenes);\r\n    }\r\n    this.estaCargando = false;\r\n    this.tituloProgress = '';\r\n    loader.dismiss();\r\n  }\r\n\r\n}\r\n"]}