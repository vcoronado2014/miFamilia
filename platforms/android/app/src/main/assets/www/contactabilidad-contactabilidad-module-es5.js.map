{"version":3,"sources":["webpack:///src/app/contactabilidad/contactabilidad.page.html","webpack:///src/app/contactabilidad/contactabilidad.module.ts","webpack:///src/app/contactabilidad/contactabilidad.page.scss","webpack:///src/app/contactabilidad/contactabilidad.page.ts"],"names":["ContactabilidadPageModule","imports","forChild","path","component","declarations","ContactabilidadPage","navCtrl","utiles","servicioGeo","loading","formBuilder","activatedRoute","router","acceso","parametrosApp","alertController","patternOnlyLetter","expCelular","expPassword","expEmail","registro","estaCargando","tituloProgress","usuarioAps","usuarioApsRegistro","modificaRegistro","nombrePersona","queryParams","subscribe","params","usuario","localStorage","getItem","JSON","parse","Nombres","ApellidoPaterno","Id","console","log","cargarForma","forma","pattern","setValue","nombreSocial","Apodo","email","CorreoElectronico","telefono","TelefonoContacto","Contactabilidad","NombreSocial","Email","Telefono","USA_API_MANAGEMENT","create","cssClass","showBackdrop","spinner","duration","loader","controls","value","run","Rut","present","then","isAppOnDevice","postInformarPersona","response","datos","procesarRespuesta","error","message","dismiss","presentToast","postInformarPersonaNative","data","InformarPersonaResponse","RespuestaBase","correctoRayen","correctoRyf","Rayen","Descripcion","toUpperCase","Ryf","actualizarRegistro","obtenerContactabilidad","fechaNac","FechaNacimiento","toString","Activo","DiaNacimiento","date","MesNacimiento","month","AnioNacimiento","year","Eliminado","ModoRegistro","FechaBaja","postRegistroFamilia","respuesta","setItem","stringify","postRegistroFamiliaNative","contactabilidad","EtiquetaTelefono","usu","existe","usuarios","length","i","getContactabilidad","actualizarContactabilidad","getContactabilidadNative","selector","template"],"mappings":"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","file":"contactabilidad-contactabilidad-module-es5.js","sourcesContent":["export default \"<ion-header class=\\\"back-app\\\">\\n  <ion-toolbar color=\\\"primary\\\" mode=\\\"md\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/familia\\\" class=\\\"fcw\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"fcw\\\">Contactabilidad</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <app-progress [mostrar]=\\\"estaCargando\\\" [titulo]=\\\"tituloProgress\\\"></app-progress>\\n  <div [hidden]=\\\"estaCargando\\\" class=\\\"ion-padding\\\" style=\\\"margin-top: 15px;\\\">\\n    <!-- <h5>Estas cambiando los datos de contactabilidad de {{nombrePersona}}</h5> -->\\n    <form [formGroup]=\\\"forma\\\" novalidate>\\n<!--       <ion-row>\\n        <ion-avatar slot=\\\"start\\\">\\n          <img *ngIf=\\\"usuarioAps.UrlImagen != ''\\\" src={{usuarioAps.UrlImagen}}>\\n          <img *ngIf=\\\"usuarioAps.UrlImagen == ''\\\" src=\\\"../assets/img/no-imagen.jpg\\\">\\n        </ion-avatar>\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\n          <mat-label>Nombre social</mat-label>\\n          <input matInput placeholder=\\\"Nombre social\\\" formControlName=\\\"nombreSocial\\\" name=\\\"nombreSocial\\\" required>\\n          <mat-error [hidden]=\\\"!(f.nombreSocial.errors && f.nombreSocial.errors.required)\\\">Nombre social requerido</mat-error>\\n          <mat-hint align=\\\"start\\\"><strong>Nombre por el cual te sientes identificado</strong> </mat-hint>\\n        </mat-form-field>\\n      </ion-row> -->\\n      <ion-item lines=\\\"none\\\" style=\\\"--ion-item-background: transparent; --padding-start:0px;\\\">\\n        <ion-avatar slot=\\\"start\\\" style=\\\"margin-top: -10px;\\\">\\n          <img *ngIf=\\\"usuarioAps.UrlImagen != ''\\\" src={{usuarioAps.UrlImagen}}>\\n          <img *ngIf=\\\"usuarioAps.UrlImagen == ''\\\" src=\\\"../assets/img/no-imagen.jpg\\\">\\n        </ion-avatar>\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\n          <mat-label>Nombre social</mat-label>\\n          <input matInput placeholder=\\\"Nombre social\\\" formControlName=\\\"nombreSocial\\\" name=\\\"nombreSocial\\\">\\n          <!-- <mat-error [hidden]=\\\"!(f.nombreSocial.errors && f.nombreSocial.errors.required)\\\">Nombre social</mat-error> -->\\n          <mat-hint align=\\\"start\\\"><strong>Nombre por el cual te sientes identificado</strong> </mat-hint>\\n        </mat-form-field>\\n      </ion-item>\\n      <h3 class=\\\"mt-40\\\">Datos de contacto</h3>\\n      <ion-row>\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\n          <mat-label>Correo electrónico</mat-label>\\n          <input matInput placeholder=\\\"ejemplo@gmail.com\\\" formControlName=\\\"email\\\" name=\\\"email\\\">\\n          <!-- <mat-error [hidden]=\\\"!(f.email.errors && f.email.errors.required)\\\">Correo requerido</mat-error> -->\\n          <mat-error [hidden]=\\\"!(f.email.errors && f.email.errors.pattern)\\\">Correo inválido</mat-error>\\n        </mat-form-field>\\n      </ion-row>\\n\\n      <ion-row>\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\n          <mat-label>Teléfono</mat-label>\\n          <input matInput placeholder=\\\"9XXXXXXXX\\\" formControlName=\\\"telefono\\\" name=\\\"telefono\\\">\\n          <mat-error [hidden]=\\\"!(f.telefono.errors && f.telefono.errors.pattern)\\\">Teléfono inválido</mat-error>\\n        </mat-form-field>\\n      </ion-row>\\n      <!-- boton de registrarse -->\\n      <ion-row>\\n        <button  [disabled]=\\\"forma.invalid\\\" class=\\\"button-registrarse\\\" (click)=\\\"onSumbit()\\\" mat-raised-button\\n          color=\\\"accent\\\">GUARDAR</button>\\n      </ion-row>\\n    </form>\\n  \\n  </div>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RouterModule } from '@angular/router';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { ContactabilidadPage } from './contactabilidad.page';\nimport { ComponentsModule } from '../components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    ComponentsModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ContactabilidadPage\n      }\n    ])\n  ],\n  declarations: [ContactabilidadPage]\n})\nexport class ContactabilidadPageModule {}\n","export default \".mt-32 {\\n  margin-top: 32px;\\n}\\n\\n.mt-24 {\\n  margin-top: 24px;\\n}\\n\\n.mt-80 {\\n  margin-top: 5em;\\n}\\n\\n.mt-40 {\\n  margin-top: 2.5em;\\n}\\n\\n.mt-36 {\\n  margin-top: 2.25em;\\n}\\n\\n.mt-52 {\\n  margin-top: 3.25em;\\n}\\n\\n.texto-1 {\\n  font-size: 1em;\\n  color: #000000DE;\\n}\\n\\n.button-registrarse {\\n  width: 80%;\\n  margin-left: 10%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGFjdGFiaWxpZGFkL0Y6XFxhcHBfbWlmYW1pbGlhX2dpdFxcbWlGYW1pbGlhX3ByZS9zcmNcXGFwcFxcY29udGFjdGFiaWxpZGFkXFxjb250YWN0YWJpbGlkYWQucGFnZS5zY3NzIiwic3JjL2FwcC9jb250YWN0YWJpbGlkYWQvY29udGFjdGFiaWxpZGFkLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0FDQ0o7O0FEQ0E7RUFDSSxnQkFBQTtBQ0VKOztBREFBO0VBQ0ksZUFBQTtBQ0dKOztBRERBO0VBQ0ksaUJBQUE7QUNJSjs7QURGQTtFQUNJLGtCQUFBO0FDS0o7O0FESEE7RUFDSSxrQkFBQTtBQ01KOztBREpBO0VBQ0ksY0FBQTtFQUNBLGdCQUFBO0FDT0o7O0FESkE7RUFDSSxVQUFBO0VBQ0EsZ0JBQUE7QUNPSiIsImZpbGUiOiJzcmMvYXBwL2NvbnRhY3RhYmlsaWRhZC9jb250YWN0YWJpbGlkYWQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm10LTMye1xyXG4gICAgbWFyZ2luLXRvcDogMzJweDtcclxufVxyXG4ubXQtMjR7XHJcbiAgICBtYXJnaW4tdG9wOiAyNHB4O1xyXG59XHJcbi5tdC04MHtcclxuICAgIG1hcmdpbi10b3A6IDVlbTtcclxufVxyXG4ubXQtNDB7XHJcbiAgICBtYXJnaW4tdG9wOiAyLjVlbTtcclxufVxyXG4ubXQtMzZ7XHJcbiAgICBtYXJnaW4tdG9wOiAyLjI1ZW07XHJcbn1cclxuLm10LTUye1xyXG4gICAgbWFyZ2luLXRvcDogMy4yNWVtO1xyXG59XHJcbi50ZXh0by0xe1xyXG4gICAgZm9udC1zaXplOiAxZW07XHJcbiAgICBjb2xvcjogIzAwMDAwMERFO1xyXG4gICAgXHJcbn1cclxuLmJ1dHRvbi1yZWdpc3RyYXJzZXtcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICBtYXJnaW4tbGVmdDogMTAlO1xyXG59XHJcbiIsIi5tdC0zMiB7XG4gIG1hcmdpbi10b3A6IDMycHg7XG59XG5cbi5tdC0yNCB7XG4gIG1hcmdpbi10b3A6IDI0cHg7XG59XG5cbi5tdC04MCB7XG4gIG1hcmdpbi10b3A6IDVlbTtcbn1cblxuLm10LTQwIHtcbiAgbWFyZ2luLXRvcDogMi41ZW07XG59XG5cbi5tdC0zNiB7XG4gIG1hcmdpbi10b3A6IDIuMjVlbTtcbn1cblxuLm10LTUyIHtcbiAgbWFyZ2luLXRvcDogMy4yNWVtO1xufVxuXG4udGV4dG8tMSB7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBjb2xvcjogIzAwMDAwMERFO1xufVxuXG4uYnV0dG9uLXJlZ2lzdHJhcnNlIHtcbiAgd2lkdGg6IDgwJTtcbiAgbWFyZ2luLWxlZnQ6IDEwJTtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { NavController, LoadingController, AlertController } from '@ionic/angular';\nimport { FormGroup, Validators, FormBuilder, FormControl, ValidatorFn } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n//servicios\nimport { ServicioUtiles } from '../../app/services/ServicioUtiles';\nimport { ServicioGeo } from '../../app/services/ServicioGeo';\nimport { ServicioAcceso } from '../../app/services/ServicioAcceso';\nimport { ServicioParametrosApp } from '../../app/services/ServicioParametrosApp';\n\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-contactabilidad',\n  templateUrl: './contactabilidad.page.html',\n  styleUrls: ['./contactabilidad.page.scss'],\n})\nexport class ContactabilidadPage implements OnInit {\n  forma: FormGroup;\n  //para validar\n  patternOnlyLetter = '[a-zA-ZÀ-ÿ\\u00f1\\u00d1]+(\\s*[a-zA-ZÀ-ÿ\\u00f1\\u00d1]*)*[a-zA-ZÀ-ÿ\\u00f1\\u00d1 ]+$';\n  expCelular = /^(\\+?56)?(\\s?)(0?9)(\\s?)[9876543]\\d{7}$/gm;\n  expPassword = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{4,8}$/gm;\n  expEmail = /^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/gm;\n  //variable para obtener el registro del usuario\n  registro = null;\n  estaCargando = false;\n  tituloProgress = '';\n  usuarioAps = null;\n  usuarioApsRegistro = null;\n  modificaRegistro = false;\n  nombrePersona = '';\n\n  constructor(\n    private navCtrl: NavController,\n    public utiles: ServicioUtiles,\n    public servicioGeo: ServicioGeo,\n    public loading: LoadingController,\n    private formBuilder: FormBuilder,\n    public activatedRoute: ActivatedRoute,\n    private router: Router,\n    public acceso: ServicioAcceso,\n    public parametrosApp: ServicioParametrosApp,\n    public alertController: AlertController\n  ) { }\n\n  //ACA HAY QUE SACAR LOS CAMPOS REQUERIDOS Y LOS ASTERISCOS DE LOS LABELS\n  //LO DDEMAS ESTTA FUNCIONANDO BIEN\n  ngOnInit() {\n    moment.locale('es');\n    //obtenemos el registro\n\n    this.activatedRoute.queryParams.subscribe(params => {\n\n      if (params && params.usuario) {\n        if (localStorage.getItem('REGISTRO')) {\n          this.registro = JSON.parse(localStorage.getItem('REGISTRO'));\n        }\n\n        this.usuarioAps = JSON.parse(params.usuario);\n        this.nombrePersona = this.usuarioAps.Nombres + ' ' + this.usuarioAps.ApellidoPaterno;\n        if (localStorage.getItem('UsuarioAps')) {\n          this.usuarioApsRegistro = JSON.parse(localStorage.getItem('UsuarioAps'));\n        }\n        //verificamos si es el mismo usuario o no\n        if (this.usuarioAps && this.usuarioApsRegistro && this.registro) {\n          if (this.usuarioAps.Id == this.usuarioApsRegistro.Id) {\n            this.modificaRegistro = true;\n          }\n        }\n        console.log(this.usuarioAps);\n      }\n\n    });\n    //cargamos la forma\n    this.cargarForma();\n  }\n  cargarForma() {\n    this.forma = new FormGroup({\n      'nombreSocial': new FormControl(''),\n      'email': new FormControl('', [Validators.pattern(this.expEmail)]),\n      'telefono': new FormControl('', [Validators.pattern(this.expCelular)]),\n    });\n    //precargar los datos del usuario. solo si modifica registro\n    if (this.modificaRegistro) {\n      if (this.registro && this.registro != null) {\n        this.forma.setValue({\n          nombreSocial: this.registro.Apodo,\n          email: this.registro.CorreoElectronico,\n          telefono: this.registro.TelefonoContacto ? this.registro.TelefonoContacto : '',\n        })\n      }\n    }\n    else{\n      //no tiene registro, pero puede tener datos de contactabilidad en el local storage\n      if (this.usuarioAps.Contactabilidad != null){\n        this.forma.setValue({\n          nombreSocial: this.usuarioAps.Contactabilidad.NombreSocial,\n          email: this.usuarioAps.Contactabilidad.Email,\n          telefono: this.usuarioAps.Contactabilidad.Telefono ? this.usuarioAps.Contactabilidad.Telefono : '',\n        })\n      }\n    }\n  }\n  async onSumbit(){\n    if (this.parametrosApp.USA_API_MANAGEMENT()){\n      let loader = await this.loading.create({\n        cssClass: 'loading-vacio',\n        showBackdrop: false,\n        spinner: null,\n        //message: 'Cargando...<br>tipos de atención',\n        duration: 2000\n      });\n      this.estaCargando =true;\n      this.tituloProgress = 'Actualizando datos de contacto';\n  \n      //variables a enviar\n      let email = this.forma.controls.email ? this.forma.controls.email.value : '';\n      let nombreSocial = this.forma.controls.nombreSocial ? this.forma.controls.nombreSocial.value : '';\n      let telefono = this.forma.controls.telefono ? this.forma.controls.telefono.value : '';\n      //el run debe ser del usuario que se está modificando\n      //let run = this.registro.Run.replace('-', '');\n      let run = this.usuarioAps.Rut;\n      await loader.present().then(async () => {\n        if (!this.utiles.isAppOnDevice()) {\n          //llamada web\n          this.servicioGeo.postInformarPersona(run, nombreSocial, email, telefono, 'MOVIL_FICHA_FAMILIAR').subscribe((response: any)=>{\n            //procesar respuesta\n            var datos = response;\n            this.procesarRespuesta(datos, loader, nombreSocial, telefono, email, run);\n  \n          },error=>{\n            console.log(error.message);\n            this.estaCargando = false;\n            loader.dismiss();\n            this.tituloProgress = '';\n            this.utiles.presentToast('Se presentó un error al guardar los datos, contacte al administrador', 'bottom', 2000);\n          })\n        }\n        else {\n          //llamada nativa\n          this.servicioGeo.postInformarPersonaNative(run, nombreSocial, email, telefono, 'MOVIL_FICHA_FAMILIAR').then((response:any)=>{\n            //procesar respuesta\n            var datos = JSON.parse(response.data);\n            this.procesarRespuesta(datos, loader, nombreSocial, telefono, email, run);\n  \n          }).catch(error=>{\n            console.log(error.message);\n            this.estaCargando = false;\n            loader.dismiss();\n            this.tituloProgress = '';\n            this.utiles.presentToast('Se presentó un error al guardar los datos, contacte al administrador', 'bottom', 2000);\n          })\n        }\n      });\n    }\n    else{\n      //si no tiene api management\n      this.utiles.presentToast('Esta funcionalidad no está disponible','bottom', 3000);\n    }\n\n  }\n  async procesarRespuesta(data, loading, nombreSocial, telefono, email, run){\n    //primero evaluamos la respuesta\n    if (data){\n      if (data.InformarPersonaResponse){\n        if (data.InformarPersonaResponse.RespuestaBase){\n          //acá trae info de rayen y de ryf\n          //ojo que debemos actualizar igual el registro, al menos con el telefono y el apodo\n          //ya que el email es de autentificacion y no se puede cambiar\n          let correctoRayen = false;\n          let correctoRyf = false;\n          if (data.InformarPersonaResponse.RespuestaBase.Rayen){\n            if (data.InformarPersonaResponse.RespuestaBase.Rayen.Descripcion.toUpperCase() == 'TRANSACCIÓN EXITOSA'){\n              correctoRayen = true;\n              console.log('actualizado rayen');\n            }\n          }\n          if (data.InformarPersonaResponse.RespuestaBase.Ryf) {\n            if (data.InformarPersonaResponse.RespuestaBase.Ryf.Descripcion.toUpperCase() == 'TRANSACCIÓN EXITOSA') {\n              correctoRyf = true;\n              console.log('actualizado ryf');\n            }\n          }\n          if (correctoRyf || correctoRayen){\n            this.estaCargando = false;\n            this.tituloProgress = '';\n            loading.dismiss();\n            this.utiles.presentToast('Datos actualizados correctamente', 'bottom', 2000);\n            //se debe actualizar registro solo si esta registrado\n            if (this.modificaRegistro){\n              this.actualizarRegistro(nombreSocial, telefono);\n            }\n            //aca debemos hacer la llamada para obtener la contactabilidad y guardarla en el localstorage\n            //this.utiles.actualizarContactabilidad(this.usuarioAps, nombreSocial, telefono, email);\n            this.obtenerContactabilidad(run);\n          }\n          else{\n            this.estaCargando = false;\n            loading.dismiss();\n            this.tituloProgress = '';\n            this.utiles.presentToast('Error al actualizar los datos', 'bottom', 2000);\n          }\n        }\n        else{\n          this.estaCargando = false;\n          loading.dismiss();\n          this.tituloProgress = '';\n          this.utiles.presentToast('Error al actualizar los datos', 'bottom', 3000);\n        }\n      }\n      else{\n        this.estaCargando = false;\n        loading.dismiss();\n        this.tituloProgress = '';\n        this.utiles.presentToast('Error al actualizar los datos', 'bottom', 3000);\n      }\n    }\n    else{\n      this.estaCargando = false;\n      loading.dismiss();\n      this.utiles.presentToast('Error al actualizar los datos', 'bottom', 3000);\n      this.tituloProgress = '';\n    }\n  }\n\n  async actualizarRegistro(nombreSocial, telefono){\n    var fechaNac = moment();\n    if (this.registro.FechaNacimiento){\n      fechaNac = moment(this.registro.FechaNacimiento);\n    }\n    //ahora actualizar el registro\n    this.registro.Apodo = nombreSocial;\n    this.registro.TelefonoContacto = telefono;\n    //valores por defecto\n    this.registro.Id = this.registro.Id.toString();\n    this.registro.Activo = this.registro.Activo.toString();\n    this.registro.DiaNacimiento = fechaNac.date().toString();\n    this.registro.MesNacimiento = (fechaNac.month() + 1).toString();\n    this.registro.AnioNacimiento = fechaNac.year().toString();\n    this.registro.Eliminado = this.registro.Eliminado.toString();\n    this.registro.ModoRegistro = this.registro.ModoRegistro.toString();\n    this.registro.FechaBaja = null;\n\n    let loader = await this.loading.create({\n      cssClass: 'loading-vacio',\n      showBackdrop: false,\n      spinner: null\n    });\n    this.estaCargando =true;\n    this.tituloProgress = 'Actualizando datos de registro';\n    await loader.present().then(async () => {\n      if (!this.utiles.isAppOnDevice()) {\n        //llamada web\n        this.servicioGeo.postRegistroFamilia(this.registro).subscribe((data)=>{\n          let respuesta = data;\n          localStorage.setItem('REGISTRO', JSON.stringify(respuesta));\n          loader.dismiss();\n          this.estaCargando = false;\n          this.utiles.presentToast('Datos actualizados correctamente', 'bottom', 2000);\n        },\n        error=>{\n          loader.dismiss();\n          this.estaCargando = false;\n          this.utiles.presentToast(error, 'bottom', 2000);\n        });\n      }\n      else{\n        //llamada nativa\n        this.servicioGeo.postRegistroFamiliaNative(this.registro).then((data)=>{\n          let respuesta = JSON.parse(data.data);\n          localStorage.setItem('REGISTRO', JSON.stringify(respuesta));\n          loader.dismiss();\n          this.estaCargando = false;\n          this.utiles.presentToast('Datos actualizados correctamente', 'bottom', 2000);\n\n        }).catch(error =>{\n          loader.dismiss();\n          this.estaCargando = false;\n          this.utiles.presentToast(error, 'bottom', 2000);\n        });\n      }\n    });\n  }\n  actualizarContactabilidad(usuario, nombreSocial, telefono, email){\n    //buscamos al usuario en local sttorage\n    var contactabilidad = {\n      Rut: usuario.Rut,\n      Id: usuario.Id,\n      NombreSocial: nombreSocial,\n      Telefono: telefono,\n      Email: email,\n      EtiquetaTelefono: 'MOVIL_FICHA_FAMILIAR'\n    }\n\n    if (localStorage.getItem('UsuarioAps')){\n      var usu = JSON.parse(localStorage.getItem('UsuarioAps'));\n      if (usu){\n        if (usu.Id == usuario.Id){\n          usu.Contactabilidad = contactabilidad;\n          localStorage.setItem('UsuarioAps', JSON.stringify(usu));\n        }\n      }\n    }\n    if (localStorage.getItem('UsuariosFamilia')){\n      var existe = false;\n      var usuarios = JSON.parse(localStorage.getItem('UsuariosFamilia'));\n      if (usuarios && usuarios.length > 0){\n        for(var i=0; i < usuarios.length; i++){\n          if (usuarios[i].Id == usuario.Id){\n            usuarios[i].Contactabilidad = contactabilidad;\n            existe = true;\n          }\n        }\n      }\n      if (existe){\n        localStorage.setItem('UsuariosFamilia', JSON.stringify(usuarios));\n      }\n    }\n\n  }\n  async obtenerContactabilidad(run){\n    let loader = await this.loading.create({\n      cssClass: 'loading-vacio',\n      showBackdrop: false,\n      spinner: null\n    });\n    this.estaCargando =true;\n    this.tituloProgress = 'Buscando contactabilidad';\n\n    await loader.present().then(async () => {\n      if (!this.utiles.isAppOnDevice()) {\n        //llamada web\n        this.servicioGeo.getContactabilidad(run).subscribe((data)=>{\n          let respuesta = data;\n          loader.dismiss();\n          this.estaCargando = false;\n          this.utiles.actualizarContactabilidad(respuesta);\n        },\n        error=>{\n          loader.dismiss();\n          this.estaCargando = false;\n          this.utiles.presentToast(error, 'bottom', 2000);\n        });\n      }\n      else{\n        //llamada nativa\n        this.servicioGeo.getContactabilidadNative(run).then((data)=>{\n          let respuesta = JSON.parse(data.data);\n          loader.dismiss();\n          this.estaCargando = false;\n          this.utiles.actualizarContactabilidad(respuesta);\n\n        }).catch(error =>{\n          loader.dismiss();\n          this.estaCargando = false;\n          this.utiles.presentToast(error, 'bottom', 2000);\n        });\n      }\n\n    });\n\n  }\n\n  get f() { return this.forma.controls; }\n  \n}\n"]}