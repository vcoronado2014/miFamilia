{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-4b76b5c3.js","./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-3f0b0c04.js","./src/app/modal-examenes/modal-examenes.page.html","./src/app/modal-examenes/modal-examenes.page.scss","./src/app/modal-examenes/modal-examenes.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACD;AACmE;;AAEvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wEAAa;AACxB;AACA;AACA;AACA,uEAAuE,qDAAoB;AAC3F,sEAAsE,qDAAsB;AAC5F;AACA;AACA,YAAY,6DAAkB;AAC9B;AACA;AACA,KAAK;AACL;;AAE0C;;;;;;;;;;;;;AC/D1C;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;ACzCrF;AAAe,wvBAAyrB,QAAQ,yFAAyF,cAAc,gQAAgQ,mBAAmB,uOAAuO,sBAAsB,6HAA6H,eAAe,iFAAiF,iBAAiB,iDAAiD,wFAAwF,iBAAiB,8CAA8C,sBAAsB,2MAA2M,mGAAmG,8BAA8B,wsBAAwsB,mBAAmB,+FAA+F,0BAA0B,8HAA8H,eAAe,8HAA8H,QAAQ,8HAA8H,uBAAuB,0TAA0T,eAAe,2CAA2C,gBAAgB,cAAc,iBAAiB,eAAe,oBAAoB,4CAA4C,oIAAoI,uEAAuE,E;;;;;;;;;;;;ACAxhI;AAAe,sFAAuB,iCAAiC,+BAA+B,6BAA6B,gBAAgB,qBAAqB,GAAG,6CAA6C,+7BAA+7B,E;;;;;;;;;;;;;;;;;;;;;;ACA1lC;AACqF;AAClJ,WAAW;AACwD;AACU;AAE7E,QAAQ;AACyB;AAOjC,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAgB5B,YACS,SAA0B,EAC1B,SAAoB,EACpB,MAAsB,EACtB,OAAsB,EACtB,KAAsB,EACtB,QAAkB,EAClB,IAAoB,EACpB,OAA0B,EACzB,GAAwB;QARzB,cAAS,GAAT,SAAS,CAAiB;QAC1B,cAAS,GAAT,SAAS,CAAW;QACpB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAe;QACtB,UAAK,GAAL,KAAK,CAAiB;QACtB,aAAQ,GAAR,QAAQ,CAAU;QAClB,SAAI,GAAJ,IAAI,CAAgB;QACpB,YAAO,GAAP,OAAO,CAAmB;QACzB,QAAG,GAAH,GAAG,CAAqB;QAxBlC,OAAO;QACP,YAAO,GAAG,SAAS,CAAC;QACpB,qBAAqB;QACrB,cAAS,GAAG,SAAS,CAAC;QAEtB,iBAAiB;QACjB,UAAK,GAAG,IAAI,CAAC;IAmBT,CAAC;IAEL,QAAQ;QACN,6CAAa,CAAC,IAAI,CAAC,CAAC;QACpB,8CAA8C;QAC9C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;QACrD,0BAA0B;QAC1B,sDAAsD;QACtD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAClD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,oCAAoC;YACpC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YACnC,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;IACH,CAAC;IACD,OAAO;QACL,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IACK,UAAU;;YACd,SAAS;YACT,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC1B,4BAA4B;YAC5B,IAAI,cAAc,CAAC,UAAU,EAAE;gBAC7B,qEAAqE;gBACrE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;aACzD;YACD,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,IAAI,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;oBACrC,OAAO,EAAE,uCAAuC;oBAChD,QAAQ,EAAE,KAAK;iBAChB,CAAC,CAAC;gBAEH,MAAM,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAS,EAAE,CAAC;oBACtC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE;wBAChC,aAAa;wBACb,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;4BAC5D,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;wBACxC,CAAC,CAAC,CAAC;qBACJ;yBACI;wBACH,gBAAgB;wBAChB,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,QAAa,EAAE,EAAE;4BAC7D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC;wBACzD,CAAC,CAAC,CAAC;qBACJ;gBACH,CAAC,EAAC,CAAC;aACJ;QACH,CAAC;KAAA;IACD,cAAc,CAAC,IAAI,EAAE,MAAM;QACzB,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,IAAI,OAAO,EAAE;YACX,KAAK,IAAI,CAAC,IAAI,OAAO,EAAE;gBACrB,IAAI,KAAK,GAAG,mCAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBAClE,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;aAC1B;YACD,6BAA6B;YAC7B,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;YAC/B,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,IAAI,CAAC,EAAE;gBACpC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aACpB;YACD,oCAAoC;SACrC;QACD,MAAM,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;CAEF;;YA7EqB,8DAAe;YACf,wDAAS;YACZ,2EAAc;YACb,4DAAa;YACf,8DAAe;YACZ,uDAAQ;YACZ,6DAAc;YACX,gEAAiB;YACpB,qFAAmB;;AAVM;IAAvC,+DAAS,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,sDAAO,EAAE,CAAC;+CAAe;AAf3C,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,4OAAyC;;KAE1C,CAAC;GACW,iBAAiB,CA8F7B;AA9F6B","file":"common-es2015.js","sourcesContent":["import { w as writeTask } from './index-29df6f59.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        }\n    });\n};\n\nexport { createButtonActiveGesture as c };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionEnd();\n        }\n        else {\n            engine.gestureSelectionEnd();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title class=\\\"home\\\">Exámenes</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\" class=\\\"pdr10\\\" (click)=\\\"dismiss()\\\">\\r\\n      <ion-icon class=\\\"home\\\" slot=\\\"icon-only\\\" name=\\\"close\\\"></ion-icon>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"back-app\\\">\\r\\n  <!-- HAY EXAMENES -->\\r\\n  <ion-list *ngIf=\\\"tiene\\\">\\r\\n    \\r\\n      <app-avatar [lines]=\\\"none\\\" [urlImagen] = \\\"orden.UrlImagen\\\" \\r\\n      [nombreCompleto]=\\\"orden.NombreUsuario\\\" \\r\\n      [parentezco]=\\\"orden.Parentezco\\\"></app-avatar>\\r\\n    <ion-list-header lines=\\\"inset\\\" mode=\\\"md\\\">\\r\\n      <ion-label><strong>Nº Órden: {{oalaId}}</strong></ion-label>\\r\\n      <ion-badge color=\\\"secondary\\\" class=\\\"ion-margin-end\\\">{{ fechaOrden }}</ion-badge>\\r\\n      <!-- <ion-button>Clear</ion-button> -->\\r\\n    </ion-list-header>\\r\\n    <ion-item lines=\\\"none\\\" *ngFor=\\\"let item of listadoExamenes\\\">\\r\\n      <ion-grid>\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"8\\\">\\r\\n            <h5>{{item.NombreExamen}}</h5>\\r\\n            <p *ngIf=\\\"item.VisibleIcono\\\">\\r\\n              <ion-icon name=\\\"checkmark-circle\\\" *ngIf=\\\"item.Check\\\"></ion-icon>\\r\\n              <ion-icon name=\\\"remove-circle\\\" *ngIf=\\\"item.UnCheck\\\"></ion-icon>&nbsp;{{item.TextoResultados}}\\r\\n            </p>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"4\\\">\\r\\n            <ion-badge color=\\\"primary\\\">{{ item.Estado }}</ion-badge>\\r\\n            <h6 *ngIf=\\\"!item.VisibleTabla\\\" style=\\\"color: #666; font-size:0.7em;\\\"><ion-icon name=\\\"analitycs\\\"></ion-icon>&nbsp;Sin Resultados</h6> \\r\\n            <h6 *ngIf=\\\"item.VisibleTabla\\\" style=\\\"color: #666; font-size:0.7em;\\\"><ion-icon name=\\\"time\\\"></ion-icon>&nbsp;{{item.FechaMuestraStr}}</h6> \\r\\n          </ion-col>\\r\\n          <!-- RESULTADOS -->\\r\\n          <!-- aca debemos agregar otra lista quitar visible -->\\r\\n          <ion-list *ngIf=\\\"item.VisibleTabla\\\" style=\\\"width: 100%;\\\">\\r\\n            <ion-grid>\\r\\n              <ion-row class=\\\"titulo-tabla-examen\\\" [ngStyle]=\\\"{'background-color': userColor}\\\">\\r\\n                <ion-col size=\\\"6\\\" class=\\\"ion-text-wrap ion-text-center\\\">\\r\\n                  Nombre\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\r\\n                  Valor\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\r\\n                  U/M\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\r\\n                  Ref.\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n            </ion-grid>\\r\\n\\r\\n            <ion-row  *ngFor=\\\"let exa of item.Resultados\\\">\\r\\n              <ion-grid>\\r\\n                <ion-row style=\\\"font-size: 0.8em;font-style: italic;\\\">\\r\\n                  <ion-col size=\\\"6\\\" class=\\\"ion-text-wrap\\\">\\r\\n                    {{exa.DescripcionResultado}}\\r\\n                  </ion-col>\\r\\n                  <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\r\\n                    {{exa.Resultado}}\\r\\n                  </ion-col>\\r\\n                  <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\r\\n                    {{exa.Um}}\\r\\n                  </ion-col>\\r\\n                  <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\r\\n                    {{exa.ValoresReferencia}}\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n              </ion-grid>\\r\\n            </ion-row>\\r\\n          </ion-list>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n  <!-- NO HAY EXAMENES -->\\r\\n  <div *ngIf=\\\"tiene == false\\\" style=\\\"position: relative; height: 100vh;\\\">\\r\\n    <div style=\\\"position: absolute; display: table; height: 100%; font-size: 30px; color:#BDBDBD; text-align: center;\\\">\\r\\n      <p style=\\\"display: table-cell; vertical-align: middle\\\">No hay exámenes para mostrar  <br>\\r\\n      <ion-icon name=\\\"information-circle\\\" style=\\\"font-size: 50px;\\\"></ion-icon></p>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \".titulo-tabla-examen {\\n  border-bottom-color: #dedede;\\n  border-bottom-style: solid;\\n  border-bottom-width: 1px;\\n  color: #fff;\\n  font-size: 0.8em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy92aWN0b3Jjb3JvbmFkby9EZXNrdG9wL21pRmFtaWxpYV9wcmUvc3JjL2FwcC9tb2RhbC1leGFtZW5lcy9tb2RhbC1leGFtZW5lcy5wYWdlLnNjc3MiLCJzcmMvYXBwL21vZGFsLWV4YW1lbmVzL21vZGFsLWV4YW1lbmVzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDRCQUFBO0VBQ0EsMEJBQUE7RUFDQSx3QkFBQTtFQUVBLFdBQUE7RUFDQSxnQkFBQTtBQ0FKIiwiZmlsZSI6InNyYy9hcHAvbW9kYWwtZXhhbWVuZXMvbW9kYWwtZXhhbWVuZXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRpdHVsby10YWJsYS1leGFtZW57XHJcbiAgICBib3JkZXItYm90dG9tLWNvbG9yOiAjZGVkZWRlO1xyXG4gICAgYm9yZGVyLWJvdHRvbS1zdHlsZTogc29saWQ7XHJcbiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7XHJcbiAgICAvL2JhY2tncm91bmQtY29sb3I6ICMwMDk3QTc7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGZvbnQtc2l6ZTogMC44ZW07XHJcblxyXG59IiwiLnRpdHVsby10YWJsYS1leGFtZW4ge1xuICBib3JkZXItYm90dG9tLWNvbG9yOiAjZGVkZWRlO1xuICBib3JkZXItYm90dG9tLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4O1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC1zaXplOiAwLjhlbTtcbn0iXX0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ModalController, NavParams, NavController, ToastController, Platform, LoadingController, MenuController, IonList } from '@ionic/angular';\r\n//SERVICIOS\r\nimport { ServicioUtiles } from '../../app/services/ServicioUtiles';\r\nimport { ServicioLaboratorio } from '../../app/services/ServicioLaboratorio';\r\nimport { environment } from 'src/environments/environment';\r\n//moment\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-modal-examenes',\r\n  templateUrl: './modal-examenes.page.html',\r\n  styleUrls: ['./modal-examenes.page.scss'],\r\n})\r\nexport class ModalExamenesPage implements OnInit {\r\n  //color\r\n  miColor = '#FF4081';\r\n  //textColor Directive\r\n  textColor = '#FFFFFF';\r\n  orden: any;\r\n  //tiene registros\r\n  tiene = true;\r\n  public listadoExamenes;\r\n  public oalaId;\r\n  public nombreUsuario;\r\n  public usuarioAps;\r\n  public user;\r\n  public userColor;\r\n  fechaOrden;\r\n  @ViewChild('myList', { read: IonList }) list: IonList;\r\n  constructor(\r\n    public modalCtrl: ModalController,\r\n    public navParams: NavParams,\r\n    public utiles: ServicioUtiles,\r\n    public navCtrl: NavController,\r\n    public toast: ToastController,\r\n    public platform: Platform,\r\n    public menu: MenuController,\r\n    public loading: LoadingController,\r\n    private lab: ServicioLaboratorio,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    moment.locale('es');\r\n    //this.miColor = this.utiles.entregaMiColor();\r\n    this.orden = JSON.parse(this.navParams.get('orden'));\r\n    //console.log(this.orden);\r\n    //this.nombreUsuario = navParams.get('NombreUsuario');\r\n    this.user = JSON.parse(sessionStorage.UsuarioAps);\r\n    this.userColor = this.user.Color;\r\n    this.miColor = this.utiles.entregaColor(this.user);\r\n    if (this.orden) {\r\n      //existe la orden hacer las llamadas\r\n      this.oalaId = this.orden.Id;\r\n      this.fechaOrden = this.orden.Fecha;\r\n      this.loadInicio();\r\n    }\r\n  }\r\n  dismiss() {\r\n    this.modalCtrl.dismiss();\r\n  }\r\n  async loadInicio() {\r\n    //ordenes\r\n    this.listadoExamenes = [];\r\n    //contenido de las llamadas.\r\n    if (sessionStorage.UsuarioAps) {\r\n      //debemos enviar el uspId del titular para que traiga todos los datos\r\n      this.usuarioAps = JSON.parse(sessionStorage.UsuarioAps);\r\n    }\r\n    if (this.usuarioAps) {\r\n      let loader = await this.loading.create({\r\n        message: 'Obteniendo...<br>Exámenes del usuario',\r\n        duration: 20000\r\n      });\r\n\r\n      await loader.present().then(async () => {\r\n        if (!this.utiles.isAppOnDevice()) {\r\n          //llamada web\r\n          this.lab.getExamenes(this.oalaId).subscribe((response: any) => {\r\n            this.porocesarLista(response, loader);\r\n          });\r\n        }\r\n        else {\r\n          //llamada nativa\r\n          this.lab.getExamenesNative(this.oalaId).then((response: any) => {\r\n            this.porocesarLista(JSON.parse(response.data), loader);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n  porocesarLista(data, loader) {\r\n    var listado = data;\r\n    if (listado) {\r\n      for (var s in listado) {\r\n        let fecha = moment(listado[s].FechaRegistro).format('DD-MM-YYYY');\r\n        listado[s].Fecha = fecha;\r\n      }\r\n      //ahora asignamos la variable\r\n      this.listadoExamenes = listado;\r\n      if (this.listadoExamenes.length == 0) {\r\n        this.tiene = false;\r\n      }\r\n      //console.log(this.listadoExamenes);\r\n    }\r\n    loader.dismiss();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}