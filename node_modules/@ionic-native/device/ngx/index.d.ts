import { IonicNativePlugin } from '@ionic-native/core';
/**
 * @name Device
 * @description
 * Access information about the underlying device and platform.
 *
 * @usage
 * ```typescript
 * import { Device } from '@ionic-native/device/ngx';
 *
 * constructor(private device: Device) { }
 *
 * ...
 *
 * console.log('Device UUID is: ' + this.device.uuid);
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class Device extends IonicNativePlugin {
    /** Get the version of Cordova running on the device. */
    cordova: string;
    /**
     * The device.model returns the name of the device's model or product. The value is set
     * by the device manufacturer and may be different across versions of the same product.
     */
    model: string;
    /** Get the device's operating system name. */
    platform: string;
    /** Get the device's Universally Unique Identifier (UUID). */
    uuid: string;
    /** Get the operating system version. */
    version: string;
    /** Get the device's manufacturer. */
    manufacturer: string;
    /** Whether the device is running on a simulator. */
    isVirtual: boolean;
    /** Get the device hardware serial number. */
    serial: string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Device, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<Device>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguZC50cyIsInNvdXJjZXMiOlsiaW5kZXguZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW9uaWNOYXRpdmVQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuLyoqXG4gKiBAbmFtZSBEZXZpY2VcbiAqIEBkZXNjcmlwdGlvblxuICogQWNjZXNzIGluZm9ybWF0aW9uIGFib3V0IHRoZSB1bmRlcmx5aW5nIGRldmljZSBhbmQgcGxhdGZvcm0uXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBEZXZpY2UgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2RldmljZS9uZ3gnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgZGV2aWNlOiBEZXZpY2UpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIGNvbnNvbGUubG9nKCdEZXZpY2UgVVVJRCBpczogJyArIHRoaXMuZGV2aWNlLnV1aWQpO1xuICogYGBgXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIERldmljZSBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgICAvKiogR2V0IHRoZSB2ZXJzaW9uIG9mIENvcmRvdmEgcnVubmluZyBvbiB0aGUgZGV2aWNlLiAqL1xuICAgIGNvcmRvdmE6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgZGV2aWNlLm1vZGVsIHJldHVybnMgdGhlIG5hbWUgb2YgdGhlIGRldmljZSdzIG1vZGVsIG9yIHByb2R1Y3QuIFRoZSB2YWx1ZSBpcyBzZXRcbiAgICAgKiBieSB0aGUgZGV2aWNlIG1hbnVmYWN0dXJlciBhbmQgbWF5IGJlIGRpZmZlcmVudCBhY3Jvc3MgdmVyc2lvbnMgb2YgdGhlIHNhbWUgcHJvZHVjdC5cbiAgICAgKi9cbiAgICBtb2RlbDogc3RyaW5nO1xuICAgIC8qKiBHZXQgdGhlIGRldmljZSdzIG9wZXJhdGluZyBzeXN0ZW0gbmFtZS4gKi9cbiAgICBwbGF0Zm9ybTogc3RyaW5nO1xuICAgIC8qKiBHZXQgdGhlIGRldmljZSdzIFVuaXZlcnNhbGx5IFVuaXF1ZSBJZGVudGlmaWVyIChVVUlEKS4gKi9cbiAgICB1dWlkOiBzdHJpbmc7XG4gICAgLyoqIEdldCB0aGUgb3BlcmF0aW5nIHN5c3RlbSB2ZXJzaW9uLiAqL1xuICAgIHZlcnNpb246IHN0cmluZztcbiAgICAvKiogR2V0IHRoZSBkZXZpY2UncyBtYW51ZmFjdHVyZXIuICovXG4gICAgbWFudWZhY3R1cmVyOiBzdHJpbmc7XG4gICAgLyoqIFdoZXRoZXIgdGhlIGRldmljZSBpcyBydW5uaW5nIG9uIGEgc2ltdWxhdG9yLiAqL1xuICAgIGlzVmlydHVhbDogYm9vbGVhbjtcbiAgICAvKiogR2V0IHRoZSBkZXZpY2UgaGFyZHdhcmUgc2VyaWFsIG51bWJlci4gKi9cbiAgICBzZXJpYWw6IHN0cmluZztcbn1cbiJdfQ==